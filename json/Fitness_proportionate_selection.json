{"cursor":"3844","size":15,"audio":[],"currentlang":"en","article":"\n'Fitness proportionate selection', also known as 'roulette wheel selection', is\na genetic operator used in genetic algorithms for selecting potentially useful\nsolutions for recombination.\n\nIn fitness proportionate selection, as in all selection methods, the fitness\nfunction assigns a fitness to possible solutions or chromosomes. This fitness\nlevel is used to associate a probability of selection with each individual\nchromosome. If f_i is the fitness of individual i in\nthe population, its probability of being selected is p_i =\n\\frac{f_i}{\\Sigma_{j=1}^{N} f_j} , where N is the number of\nindividuals in the population.\n\nThis could be imagined similar to a Roulette wheel in a casino. Usually a\nproportion of the wheel is assigned to each of the possible selections based\non their fitness value. This could be achieved by dividing the fitness of a\nselection by the total fitness of all the selections, thereby normalizing\nthem to 1. Then a random selection is made similar to how the roulette wheel\nis rotated.\n\nWhile candidate solutions with a higher fitness will be less likely to be\neliminated, there is still a chance that they may be. Contrast this with a\nless sophisticated selection algorithm, such as truncation selection, which\nwill eliminate a fixed percentage of the weakest candidates. With fitness\nproportionate selection there is a chance some weaker solutions may survive\nthe selection process; this is an advantage, as though a solution may be weak,\nit may include some component which could prove useful following the\nrecombination process.\n\nThe analogy to a roulette wheel can be envisaged by imagining a roulette wheel\nin which each candidate solution represents a pocket on the wheel; the size of\nthe pockets are proportionate to the probability of selection of the solution.\nSelecting N chromosomes from the population is equivalent to playing N games on\nthe roulette wheel, as each candidate is drawn independently.\n\nOther selection techniques, such as stochastic universal sampling BÃ¤ck,\nThomas, Evolutionary Algorithms in Theory and Practice (1996), p. 120, Oxford\nUniv. Press or tournament selection, are often used in practice. This is\nbecause they have less stochastic noise, or are fast, easy to implement and have\na constant selection pressure [Blickle, 1996].\n\n\n\nThe naive implementation is carried out by first generating the cumulative\nprobability distribution (CDF) over the list of individuals using a probability\nproportional to the fitness of the individual. A uniform random number from the\nrange [0,1) is chosen and the inverse of the CDF for that number gives an\nindividual. This corresponds to the roullete ball falling in the bin of an\nindividual with a probaility proportional to its width. The \"bin\" corresponding\nto the inverse of the uniform random number can be found most quickly by using a\nbinary search over the elements of the CDF. It takes in the O(logn) time to\nchoose and individual. A faster alternative that generates individuals in O(1)\ntime will be to use the alias method.\n","linknr":-1,"url":"Fitness_proportionate_selection","recorded":1376428026,"links":[],"instances":["continuous"],"pdf":[],"categories":["Genetic algorithms"],"headings":["See also","External links","References"],"image":[],"tags":[["uniform_distribution","continuous"]],"members":["uniform_distribution"],"related":["Genetic_operator","Genetic_algorithm","Fitness_function","Chromosome","Probability","Truncation_selection","Stochastic_universal_sampling","Tournament_selection","Cumulative_probability_distribution_function","Uniform_distribution_(continuous)","Binary_search_algorithm","Big_O_notation","Alias_method","Stochastic_universal_sampling","Tournament_selection","Reward-based_selection"]}